@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translatex(1.5rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translatex(-1.5rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInButton {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%;
  /* 10/16 = 0.625. This set allows 
        users to change default font-size*/ }

body {
  box-sizing: border-box;
  /* Not inherited */ }

body {
  font-family: "Lato", sans-serif;
  /* font is inherit by child tags. More efficient then use the universal selector */
  font-weight: 400;
  /*font-size: 16px;*/
  /* Remove . Now we are using 10px root font-size*/
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* padding is not inherit */ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /*add margin to separate main 
        button*/ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;
    animation: moveInLeft 1s ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.btn:link, .btn:visited {
  font-size: 1.6rem;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* x y blur color */ }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  /* It works because pseudo-elements behave 
            like a child. So is 100% of the botton height  */
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--white::after {
  background-color: #fff; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInButton .5s ease-out .75s;
  /*last value 
            is delay time*/
  animation-fill-mode: backwards;
  /*Apply 0% styles when 
            animation begins*/ }

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto;
  /* trick to center block element inside 
        of another block elements. auto value results in a 
        margin of the same size left and right*/ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row:after {
    content: "";
    display: table;
    clear: both; }
  .row .col-1-of-1 {
    width: calc(1 * ((100% - (1 - 1) * 6rem) / 1) + (1 - 1) * 6rem); }
  .row .col-1-of-2 {
    width: calc(1 * ((100% - (2 - 1) * 6rem) / 2) + (1 - 1) * 6rem); }
  .row .col-1-of-3 {
    width: calc(1 * ((100% - (3 - 1) * 6rem) / 3) + (1 - 1) * 6rem); }
  .row .col-1-of-4 {
    width: calc(1 * ((100% - (4 - 1) * 6rem) / 4) + (1 - 1) * 6rem); }
  .row .col-1-of-5 {
    width: calc(1 * ((100% - (5 - 1) * 6rem) / 5) + (1 - 1) * 6rem); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - (3 - 1) * 6rem) / 3) + (2 - 1) * 6rem); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - (4 - 1) * 6rem) / 4) + (2 - 1) * 6rem); }
  .row .col-2-of-5 {
    width: calc(2 * ((100% - (5 - 1) * 6rem) / 5) + (2 - 1) * 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - (4 - 1) * 6rem) / 4) + (3 - 1) * 6rem); }
  .row .col-3-of-5 {
    width: calc(3 * ((100% - (5 - 1) * 6rem) / 5) + (3 - 1) * 6rem); }
  .row .col-4-of-5 {
    width: calc(4 * ((100% - (5 - 1) * 6rem) / 5) + (4 - 1) * 6rem); }
  .row [class^="col-"] {
    background-color: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /*image stays on top of
        the page*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; }
  .header__logo {
    height: 3.5rem; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    /*relative to parent element*/
    left: 50%;
    transform: translate(-50%, -50%);
    /*relative to itself*/
    text-align: center;
    /*main button is a text element*/ }

/*yarn compile:sass*/
